# Generated by Django 5.1.3 on 2025-03-06 12:03

import django.contrib.postgres.fields.ranges
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0017_customuser_game_class_customuser_prefecture_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CafeTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_name', models.CharField(max_length=10)),
                ('capacity', models.PositiveIntegerField(default=4)),
                ('cafe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='table_relations', to='accounts.boardgamecafe')),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservatin_relations', to='accounts.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='PlayGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_provider_type', models.CharField(choices=[('cafe', 'カフェ'), ('user', 'ユーザー')], default='cafe', max_length=10)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playgames', to='accounts.boardgame')),
                ('instructor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='instructed_games', to=settings.AUTH_USER_MODEL)),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='provided_games', to='accounts.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=4)),
                ('max_participants', models.PositiveIntegerField(default=4)),
                ('reserved_at', models.DateTimeField(auto_now_add=True)),
                ('reservation_type', models.CharField(choices=[('match', 'マッチング予約'), ('user', 'アプリ予約'), ('staff', '店舗予約')], default='user', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_recruiting', models.BooleanField(default=False)),
                ('cafe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.boardgamecafe')),
                ('choice_game', models.ManyToManyField(blank=True, related_name='choice_game_reservations', to='accounts.boardgame')),
                ('game_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.gameclass')),
                ('participant', models.ManyToManyField(through='cafes.Participant', to='accounts.customuser')),
                ('play_game', models.ManyToManyField(blank=True, related_name='play_game_reservations', through='cafes.PlayGame', to='accounts.boardgame')),
            ],
        ),
        migrations.AddField(
            model_name='playgame',
            name='reservation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cafes.reservation'),
        ),
        migrations.AddField(
            model_name='participant',
            name='reservation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_relations', to='cafes.reservation'),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_is_staff', models.BooleanField(default=False)),
                ('content', models.TextField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('is_public', models.BooleanField(default=True)),
                ('is_suggest', models.BooleanField(default=False)),
                ('is_rule_approval', models.BooleanField(default=False)),
                ('is_system_message', models.BooleanField(default=False)),
                ('read_by', models.ManyToManyField(blank=True, related_name='read_messages', to='accounts.customuser')),
                ('read_by_staff', models.ManyToManyField(blank=True, related_name='read_messages', to='accounts.cafestaff')),
                ('receiver', models.ManyToManyField(blank=True, related_name='direct_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='cafes.reservation')),
            ],
            options={
                'ordering': ['sent_at'],
            },
        ),
        migrations.CreateModel(
            name='SuggestGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_want_to_play', models.IntegerField(default=0)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cafes.message')),
                ('suggest_game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.boardgame')),
            ],
        ),
        migrations.CreateModel(
            name='SuggestGameInstructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_accepted', models.BooleanField(default=False)),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('suggest_game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cafes.suggestgame')),
            ],
        ),
        migrations.AddField(
            model_name='suggestgame',
            name='instructors',
            field=models.ManyToManyField(blank=True, related_name='explained_suggest_games', through='cafes.SuggestGameInstructor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='SuggestGameParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_accepted', models.BooleanField(default=False)),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.customuser')),
                ('suggest_game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cafes.suggestgame')),
            ],
        ),
        migrations.AddField(
            model_name='suggestgame',
            name='participants',
            field=models.ManyToManyField(blank=True, related_name='suggest_games', through='cafes.SuggestGameParticipant', to='accounts.customuser'),
        ),
        migrations.CreateModel(
            name='SuggestGameProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.customuser')),
                ('suggest_game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cafes.suggestgame')),
            ],
        ),
        migrations.AddField(
            model_name='suggestgame',
            name='providers',
            field=models.ManyToManyField(blank=True, related_name='bring_suggest_games', through='cafes.SuggestGameProvider', to='accounts.customuser'),
        ),
        migrations.CreateModel(
            name='TableTimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timeslot_range', django.contrib.postgres.fields.ranges.DateTimeRangeField(null=True)),
                ('is_reserved', models.BooleanField(default=False)),
                ('is_closed', models.BooleanField(default=False)),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeslot_relations', to='cafes.cafetable')),
            ],
            options={
                'ordering': ['timeslot_range'],
            },
        ),
        migrations.CreateModel(
            name='ReservationTimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeslot_relations', to='cafes.reservation')),
                ('timeslot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservatin_relations', to='cafes.tabletimeslot')),
            ],
            options={
                'unique_together': {('reservation', 'timeslot')},
            },
        ),
        migrations.AddField(
            model_name='reservation',
            name='timeslot',
            field=models.ManyToManyField(through='cafes.ReservationTimeSlot', to='cafes.tabletimeslot'),
        ),
        migrations.CreateModel(
            name='CafeGameRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_instruct', models.BooleanField(default=False)),
                ('is_recommended', models.BooleanField(default=False)),
                ('cafe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_relations', to='accounts.boardgamecafe')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cafe_relations', to='accounts.boardgame')),
            ],
            options={
                'unique_together': {('cafe', 'game')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='playgame',
            unique_together={('reservation', 'game', 'game_provider_type')},
        ),
        migrations.CreateModel(
            name='StaffGameRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_instruct', models.BooleanField(default=False)),
                ('is_recommended', models.BooleanField(default=False)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_relations', to='accounts.boardgame')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_relations', to='accounts.cafestaff')),
            ],
            options={
                'unique_together': {('staff', 'game')},
            },
        ),
    ]
